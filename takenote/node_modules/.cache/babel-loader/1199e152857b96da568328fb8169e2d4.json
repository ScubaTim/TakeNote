{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nconst App = () => {\n  const [notesList, setNotesList] = useState([]);\n  const [viewToggle, setViewToggle] = useState(false);\n\n  const handleNewNote = () => {\n    setViewToggle(!viewToggle);\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/notes').then(res => {\n      const notes = res.data;\n      setNotesList(notes);\n    });\n  }, []); //If no notes to display, show note editor instead.\n\n  if (notesList.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      createNote: handleNewNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NoteEditor, {\n      notesList: notesList,\n      setNotesList: setNotesList,\n      toggle: setViewToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })));\n  } //If there are notes, show NoteList unless newNote is pressed, then show NoteEditor.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    createNote: handleNewNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, viewToggle ? /*#__PURE__*/React.createElement(NoteEditor, {\n    notesList: notesList,\n    setNotesList: setNotesList,\n    toggle: setViewToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(NotesList, {\n    notesList: notesList,\n    setNotesList: setNotesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 121\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js"],"names":["React","useState","useEffect","axios","Toolbar","NotesList","NoteEditor","Container","App","notesList","setNotesList","viewToggle","setViewToggle","handleNewNote","get","then","res","notes","data","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMY,aAAa,GAAG,MAAM;AACxBD,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACAW,GADL,CACS,6BADT,EAEKC,IAFL,CAEUC,GAAG,IAAI;AACT,YAAMC,KAAK,GAAGD,GAAG,CAACE,IAAlB;AACAR,MAAAA,YAAY,CAACO,KAAD,CAAZ;AACH,KALL;AAMH,GAPQ,EAON,EAPM,CAAT,CARc,CAiBd;;AACA,MAAIR,SAAS,CAACU,MAAV,KAAqB,CAAzB,EAA4B;AACxB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,UAAU,EAAEN,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAEJ,SAAvB;AAAkC,MAAA,YAAY,EAAEC,YAAhD;AAA8D,MAAA,MAAM,EAAEE,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH,GA3Ba,CA6Bd;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,UAAU,gBAAG,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,SAAvB;AAAkC,IAAA,YAAY,EAAEC,YAAhD;AAA8D,IAAA,MAAM,EAAEE,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA6F,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEH,SAAtB;AAAiC,IAAA,YAAY,EAAEC,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5G,CAFJ,CADJ;AAQH,CAtCD;;AAwCA,eAAeF,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nconst App = () => {\n    const [notesList, setNotesList] = useState([]);\n    const [viewToggle, setViewToggle] = useState(false);\n\n    const handleNewNote = () => {\n        setViewToggle(!viewToggle);\n    }\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:3001/notes')\n            .then(res => {\n                const notes = res.data\n                setNotesList(notes);\n            })\n    }, []);\n\n    //If no notes to display, show note editor instead.\n    if (notesList.length === 0) {\n        return (\n            <div>\n                <Toolbar createNote={handleNewNote} />\n                <Container>\n                    <NoteEditor notesList={notesList} setNotesList={setNotesList} toggle={setViewToggle} />\n                </Container>\n            </div>\n        );\n    }\n\n    //If there are notes, show NoteList unless newNote is pressed, then show NoteEditor.\n    return (\n        <div>\n            <Toolbar createNote={handleNewNote} />\n            <Container>\n                {viewToggle ? <NoteEditor notesList={notesList} setNotesList={setNotesList} toggle={setViewToggle} /> : <NotesList notesList={notesList} setNotesList={setNotesList} />}\n            </Container>\n        </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}