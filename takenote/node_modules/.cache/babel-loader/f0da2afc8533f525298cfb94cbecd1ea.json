{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js\";\nimport React, { useState } from 'react';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\nlet notes = [{\n  id: 1,\n  content: \"HTML is easy\",\n  date: \"2019-05-30T17:30:31.098Z\",\n  important: true\n}, {\n  id: 2,\n  content: \"Browser can execute only Javascript\",\n  date: \"2019-05-30T18:39:34.091Z\",\n  important: false\n}, {\n  id: 3,\n  content: \"GET and POST are the most important methods of HTTP protocol\",\n  date: \"2019-05-30T19:20:14.298Z\",\n  important: true\n}];\n\nconst App = () => {\n  const [newNote, setNewNote] = useState(false); //If there are no notes, show the editor\n  //If notes, show the notes list\n  //If new note is clicked, switch to note editor\n\n  const handleNewNote = () => {\n    setNewNote(!newNote);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    createNote: handleNewNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, newNote ? /*#__PURE__*/React.createElement(NoteEditor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(NotesList, {\n    notesList: notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 45\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js"],"names":["React","useState","Toolbar","NotesList","NoteEditor","Container","notes","id","content","date","important","App","newNote","setNewNote","handleNewNote"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,IAAIC,KAAK,GAAG,CACR;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,OAAO,EAAE,cAFb;AAGIC,EAAAA,IAAI,EAAE,0BAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CADQ,EAOR;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,OAAO,EAAE,qCAFb;AAGIC,EAAAA,IAAI,EAAE,0BAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CAPQ,EAaR;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,OAAO,EAAE,8DAFb;AAGIC,EAAAA,IAAI,EAAE,0BAHV;AAIIC,EAAAA,SAAS,EAAE;AAJf,CAbQ,CAAZ;;AAqBA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC,CADc,CAEd;AACA;AACA;;AACA,QAAMa,aAAa,GAAG,MAAM;AACxBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAKA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEE,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAoB,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,CAFJ,CADJ;AAQH,CAlBD;;AAoBA,eAAeK,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nlet notes = [\n    {\n        id: 1,\n        content: \"HTML is easy\",\n        date: \"2019-05-30T17:30:31.098Z\",\n        important: true\n    },\n    {\n        id: 2,\n        content: \"Browser can execute only Javascript\",\n        date: \"2019-05-30T18:39:34.091Z\",\n        important: false\n    },\n    {\n        id: 3,\n        content: \"GET and POST are the most important methods of HTTP protocol\",\n        date: \"2019-05-30T19:20:14.298Z\",\n        important: true\n    }\n];\n\nconst App = () => {\n    const [newNote, setNewNote] = useState(false);\n    //If there are no notes, show the editor\n    //If notes, show the notes list\n    //If new note is clicked, switch to note editor\n    const handleNewNote = () => {\n        setNewNote(!newNote);\n    }\n\n\n    return (\n        <div>\n            <Toolbar createNote={handleNewNote} />\n            <Container>\n                {newNote ? <NoteEditor /> : <NotesList notesList={notes} />}\n            </Container>\n        </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}