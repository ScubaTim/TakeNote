{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js\";\nimport React, { useState } from 'react';\nimport { Row, Col, Input, Label } from 'reactstrap';\nimport Note from './Note';\n\nconst NotesList = ({\n  notesList,\n  setNotes\n}) => {\n  const [showImportant, toggleShowImportant] = useState(false); //useCallback\n\n  const FilteredNotesList = () => {\n    // if (!showImportant) {\n    //     //Generates a list of all notes with correct columns\n    //     const Notes = notesList.map((note, i) => (\n    //         <Col key={i} xs=\"12\" sm=\"6\" md=\"4\">\n    //             <Note note={note} notesList={notesList} setNotes={setNotes} />\n    //         </Col>\n    //     ));\n    //     return Notes;\n    // } else {\n    //Generates a list of only important notes\n    const Notes = notesList.filter(note => showImportant ? note.important : note).map((note, i) => /*#__PURE__*/React.createElement(Col, {\n      key: i,\n      xs: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Note, {\n      note: note,\n      notesList: notesList,\n      setNotes: setNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    })));\n    return Notes;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-direction-column justify-content-between align-items-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, FilteredNotesList()))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    className: \"ml-4 pl-1 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    onClick: () => toggleShowImportant(!showImportant),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }), showImportant ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 42\n    }\n  }, \"Show All\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 66\n    }\n  }, \"Show Important Only\")))));\n};\n\nexport default NotesList;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js"],"names":["React","useState","Row","Col","Input","Label","Note","NotesList","notesList","setNotes","showImportant","toggleShowImportant","FilteredNotesList","Notes","filter","note","important","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,KAA1B,QAAuC,YAAvC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAC3C,QAAM,CAACC,aAAD,EAAgBC,mBAAhB,IAAuCV,QAAQ,CAAC,KAAD,CAArD,CAD2C,CAG3C;;AACA,QAAMW,iBAAiB,GAAG,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,KAAK,GACPL,SAAS,CACJM,MADL,CACaC,IAAD,IAAUL,aAAa,GAAGK,IAAI,CAACC,SAAR,GAAoBD,IADvD,EAEKE,GAFL,CAES,CAACF,IAAD,EAAOG,CAAP,kBACD,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,IAAZ;AAAkB,MAAA,SAAS,EAAEP,SAA7B;AAAwC,MAAA,QAAQ,EAAEC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHR,CADJ;AASA,WAAOI,KAAP;AACH,GArBD;;AAuBA,sBACI,uDACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,iBAAiB,EADtB,CADJ,CADJ,CADJ,eAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAE,MAAMD,mBAAmB,CAAC,CAACD,aAAF,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKA,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAF7C,CAFJ,CADJ,CARJ,CADJ;AAoBH,CA/CD;;AAiDA,eAAeH,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Row, Col, Input, Label } from 'reactstrap';\nimport Note from './Note';\n\nconst NotesList = ({ notesList, setNotes }) => {\n    const [showImportant, toggleShowImportant] = useState(false);\n\n    //useCallback\n    const FilteredNotesList = () => {\n        // if (!showImportant) {\n        //     //Generates a list of all notes with correct columns\n        //     const Notes = notesList.map((note, i) => (\n        //         <Col key={i} xs=\"12\" sm=\"6\" md=\"4\">\n        //             <Note note={note} notesList={notesList} setNotes={setNotes} />\n        //         </Col>\n        //     ));\n        //     return Notes;\n        // } else {\n        //Generates a list of only important notes\n        const Notes = (\n            notesList\n                .filter((note) => showImportant ? note.important : note)\n                .map((note, i) => (\n                    <Col key={i} xs=\"4\">\n                        <Note note={note} notesList={notesList} setNotes={setNotes} />\n                    </Col>\n                ))\n        );\n        return Notes;\n    }\n\n    return (\n        <>\n            <Row className=\"mb-5\">\n                <Col>\n                    <Row className=\"d-flex flex-direction-column justify-content-between align-items-between\">\n                        {FilteredNotesList()}\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <hr />\n                    <Label check className=\"ml-4 pl-1 my-3\">\n                        <Input type=\"checkbox\" onClick={() => toggleShowImportant(!showImportant)} />\n                        {showImportant ? <span>Show All</span> : <span>Show Important Only</span>}\n                    </Label>\n                </Col>\n            </Row>\n        </>\n    )\n};\n\nexport default NotesList;"]},"metadata":{},"sourceType":"module"}