{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport noteService from '../services/note';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [toggleEditorView, setToggleEditorView] = useState(false);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const handleToggle = () => {\n    setToggleEditorView(!toggleEditorView);\n    console.log(notes);\n  }; //If no notes to display, show note editor instead.\n\n\n  if (notes.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      toggle: handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NoteEditor, {\n      notes: notes,\n      setNotes: setNotes,\n      toggle: handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    })));\n  } //If there are notes, show NoteList unless toggleEditorView is pressed, then show NoteEditor.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    toggle: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, toggleEditorView ? /*#__PURE__*/React.createElement(NoteEditor, {\n    notes: notes,\n    setNotes: setNotes,\n    toggle: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }) : /*#__PURE__*/React.createElement(NotesList, {\n    notesList: notes,\n    setNotes: setNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 110\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js"],"names":["React","useState","useEffect","noteService","Toolbar","NotesList","NoteEditor","Container","App","notes","setNotes","toggleEditorView","setToggleEditorView","getAll","then","initialNotes","handleToggle","console","log","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,KAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CACNU,MADL,GAEKC,IAFL,CAEUC,YAAY,IAAI;AAClBL,MAAAA,QAAQ,CAACK,YAAD,CAAR;AACH,KAJL;AAKH,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMC,YAAY,GAAG,MAAM;AACvBJ,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH,GAHD,CAZc,CAiBd;;;AACA,MAAIA,KAAK,CAACU,MAAN,KAAiB,CAArB,EAAwB;AACpB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,MAAM,EAAEH,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEP,KAAnB;AAA0B,MAAA,QAAQ,EAAEC,QAApC;AAA8C,MAAA,MAAM,EAAEM,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH,GA3Ba,CA6Bd;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAEA,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,gBAAgB,gBAAG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,KAAnB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAA8C,IAAA,MAAM,EAAEM,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAA4E,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEP,KAAtB;AAA6B,IAAA,QAAQ,EAAEC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADjG,CAFJ,CADJ;AAQH,CAtCD;;AAwCA,eAAeF,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport noteService from '../services/note';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [toggleEditorView, setToggleEditorView] = useState(false);\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n    }, []);\n\n    const handleToggle = () => {\n        setToggleEditorView(!toggleEditorView);\n        console.log(notes)\n    }\n\n    //If no notes to display, show note editor instead.\n    if (notes.length === 0) {\n        return (\n            <div>\n                <Toolbar toggle={handleToggle} />\n                <Container>\n                    <NoteEditor notes={notes} setNotes={setNotes} toggle={handleToggle} />\n                </Container>\n            </div>\n        );\n    }\n\n    //If there are notes, show NoteList unless toggleEditorView is pressed, then show NoteEditor.\n    return (\n        <div>\n            <Toolbar toggle={handleToggle} />\n            <Container>\n                {toggleEditorView ? <NoteEditor notes={notes} setNotes={setNotes} toggle={handleToggle} /> : <NotesList notesList={notes} setNotes={setNotes} />}\n            </Container>\n        </div>\n    );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}