{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport noteService from '../services/note';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [editorView, setEditorView] = useState(false);\n  useEffect(() => {\n    //Get notes from database\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    }).catch(error => {\n      alert(`There was an error getting notes: ${error}`);\n    });\n  }, []);\n  const toggleEditorView = useCallback(() => {\n    setEditorView(!editorView);\n  }, [editorView]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Toolbar, {\n    toggleEditorView: toggleEditorView,\n    editorView: editorView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, editorView || notes.length === 0 ? /*#__PURE__*/React.createElement(NoteEditor, {\n    notes: notes,\n    setNotes: setNotes,\n    toggleEditorView: toggleEditorView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }\n  }) : /*#__PURE__*/React.createElement(NotesList, {\n    notesList: notes,\n    setNotes: setNotes,\n    toggleEditorView: toggleEditorView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js"],"names":["React","useState","useEffect","useCallback","Container","Row","Col","noteService","Toolbar","NotesList","NoteEditor","App","notes","setNotes","editorView","setEditorView","getAll","then","initialNotes","catch","error","alert","toggleEditorView","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,YAApC;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAK,IAAAA,WAAW,CACNS,MADL,GAEKC,IAFL,CAEUC,YAAY,IAAI;AAClBL,MAAAA,QAAQ,CAACK,YAAD,CAAR;AACH,KAJL,EAKKC,KALL,CAKYC,KAAD,IAAW;AACdC,MAAAA,KAAK,CAAE,qCAAoCD,KAAM,EAA5C,CAAL;AACH,KAPL;AAQH,GAVQ,EAUN,EAVM,CAAT;AAYA,QAAME,gBAAgB,GAAGnB,WAAW,CAChC,MAAM;AACFY,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAH+B,EAG7B,CAACA,UAAD,CAH6B,CAApC;AAKA,sBACI,uDACI,oBAAC,OAAD;AAAS,IAAA,gBAAgB,EAAEQ,gBAA3B;AAA6C,IAAA,UAAU,EAAER,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UAAU,IAAIF,KAAK,CAACW,MAAN,KAAiB,CAA/B,gBACK,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEX,KAAnB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAA8C,IAAA,gBAAgB,EAAES,gBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,gBAEK,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEV,KAAtB;AAA6B,IAAA,QAAQ,EAAEC,QAAvC;AAAiD,IAAA,gBAAgB,EAAES,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV,CADJ,CADJ,CAFJ,CADJ;AAcH,CAnCD;;AAqCA,eAAeX,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport noteService from '../services/note';\n\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [editorView, setEditorView] = useState(false);\n\n    useEffect(() => {\n        //Get notes from database\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n            .catch((error) => {\n                alert(`There was an error getting notes: ${error}`)\n            })\n    }, []);\n\n    const toggleEditorView = useCallback(\n        () => {\n            setEditorView(!editorView);\n        }, [editorView]);\n\n    return (\n        <>\n            <Toolbar toggleEditorView={toggleEditorView} editorView={editorView} />\n            <Container>\n                <Row>\n                    <Col>\n                        {editorView || notes.length === 0\n                            ? <NoteEditor notes={notes} setNotes={setNotes} toggleEditorView={toggleEditorView} />\n                            : <NotesList notesList={notes} setNotes={setNotes} toggleEditorView={toggleEditorView} />}\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}