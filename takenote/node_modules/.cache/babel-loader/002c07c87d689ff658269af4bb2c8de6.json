{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js\";\nimport React, { useState } from 'react';\nimport Note from './Note';\nimport styled from 'styled-components';\nimport { Row, Col, Input, Label } from 'reactstrap'; //The \"Grid\"\n\nconst ListField = styled('div')`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: space-between;\n`;\n\nconst NotesList = ({\n  notesList,\n  setNotes\n}) => {\n  const [showImportant, setShowImportant] = useState(false);\n\n  const toggleImportantOnly = () => {\n    setShowImportant(!showImportant);\n\n    if (!showImportant) {\n      //Generates a list of all notes with correct columns\n      const Notes = notesList.map((note, i) => /*#__PURE__*/React.createElement(Col, {\n        key: i,\n        xs: \"12\",\n        sm: \"6\",\n        md: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Note, {\n        note: note,\n        notesList: notesList,\n        setNotes: setNotes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      })));\n      return Notes;\n    } else {\n      //Generates a list of only important notes\n      const Notes = notesList.filter(note => note.important).map((note, i) => /*#__PURE__*/React.createElement(Col, {\n        key: i,\n        xs: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Note, {\n        note: note,\n        notesList: notesList,\n        setNotes: setNotes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      })));\n      return Notes;\n    }\n  };\n\n  const important = /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    className: \"ml-4 pl-1 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    onClick: () => toggleImportantOnly(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), showImportant ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 34\n    }\n  }, \"Show Important Only\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 69\n    }\n  }, \"Show All\")));\n\n  const toggleView = () => {};\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListField, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, toggleImportantOnly())))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, important));\n};\n\nexport default NotesList;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js"],"names":["React","useState","Note","styled","Row","Col","Input","Label","ListField","NotesList","notesList","setNotes","showImportant","setShowImportant","toggleImportantOnly","Notes","map","note","i","filter","important","toggleView"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Note from './Note';\nimport styled from 'styled-components';\nimport { Row, Col, Input, Label } from 'reactstrap';\n\n//The \"Grid\"\nconst ListField = styled('div')`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: space-between;\n`\n\nconst NotesList = ({ notesList, setNotes }) => {\n    const [showImportant, setShowImportant] = useState(false);\n\n    const toggleImportantOnly = () => {\n        setShowImportant(!showImportant);\n        if (!showImportant) {\n            //Generates a list of all notes with correct columns\n            const Notes = notesList.map((note, i) => (\n                <Col key={i} xs=\"12\" sm=\"6\" md=\"4\">\n                    <Note note={note} notesList={notesList} setNotes={setNotes} />\n                </Col>\n            ));\n            return Notes;\n        } else {\n            //Generates a list of only important notes\n            const Notes = (\n                notesList\n                    .filter((note) => note.important)\n                    .map((note, i) => (\n                        <Col key={i} xs=\"4\">\n                            <Note note={note} notesList={notesList} setNotes={setNotes} />\n                        </Col>\n                    ))\n            );\n            return Notes;\n        }\n    }\n\n    const important = (\n        <Col>\n            <hr />\n            <Label check className=\"ml-4 pl-1 my-3\">\n                <Input type=\"checkbox\" onClick={() => toggleImportantOnly()} />\n                {showImportant ? <span>Show Important Only</span> : <span>Show All</span>}\n            </Label>\n        </Col>\n    )\n\n    const toggleView = () => {\n\n    }\n\n    return (\n        <>\n            <Row className=\"mb-5\">\n                <Col>\n                    <ListField>\n                        <Row>\n                            {toggleImportantOnly()}\n                        </Row>\n                    </ListField>\n                </Col>\n            </Row>\n            <Row>\n                {important}\n            </Row>\n        </>\n    )\n};\n\nexport default NotesList;"]},"metadata":{},"sourceType":"module"}