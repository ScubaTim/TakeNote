{"ast":null,"code":"import axios from'axios';var baseUrl='/notes';var getAll=function getAll(){var req=axios.get(baseUrl);return req.then(function(res){return res.data;});};var create=function create(newObject){var req=axios.post(baseUrl,newObject);return req.then(function(res){return res.data;});};var update=function update(newObject,id){var req=axios.put(\"\".concat(baseUrl,\"/\").concat(id),newObject);return req.then(function(res){return res.data;});};var remove=function remove(id){var req=axios.delete(baseUrl,id);return req.then(function(res){return res.data;});};export default{getAll:getAll,create:create,update:update,remove:remove};","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/services/note.js"],"names":["axios","baseUrl","getAll","req","get","then","res","data","create","newObject","post","update","id","put","remove","delete"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAhB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjB,GAAMC,CAAAA,GAAG,CAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAZ,CACA,MAAOE,CAAAA,GAAG,CAACE,IAAJ,CAAS,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EAAZ,CAAP,CACH,CAHD,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,SAAD,CAAe,CAC1B,GAAMN,CAAAA,GAAG,CAAGH,KAAK,CAACU,IAAN,CAAWT,OAAX,CAAoBQ,SAApB,CAAZ,CACA,MAAON,CAAAA,GAAG,CAACE,IAAJ,CAAS,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EAAZ,CAAP,CACH,CAHD,CAKA,GAAMI,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACF,SAAD,CAAYG,EAAZ,CAAmB,CAC9B,GAAMT,CAAAA,GAAG,CAAGH,KAAK,CAACa,GAAN,WAAaZ,OAAb,aAAwBW,EAAxB,EAA8BH,SAA9B,CAAZ,CACA,MAAON,CAAAA,GAAG,CAACE,IAAJ,CAAS,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EAAZ,CAAP,CACH,CAHD,CAKA,GAAMO,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACF,EAAD,CAAQ,CACnB,GAAMT,CAAAA,GAAG,CAAGH,KAAK,CAACe,MAAN,CAAad,OAAb,CAAsBW,EAAtB,CAAZ,CACA,MAAOT,CAAAA,GAAG,CAACE,IAAJ,CAAS,SAAAC,GAAG,QAAIA,CAAAA,GAAG,CAACC,IAAR,EAAZ,CAAP,CACH,CAHD,CAKA,cAAe,CAAEL,MAAM,CAANA,MAAF,CAAUM,MAAM,CAANA,MAAV,CAAkBG,MAAM,CAANA,MAAlB,CAA0BG,MAAM,CAANA,MAA1B,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(res => res.data)\n}\n\nconst create = (newObject) => {\n    const req = axios.post(baseUrl, newObject)\n    return req.then(res => res.data)\n}\n\nconst update = (newObject, id) => {\n    const req = axios.put(`${baseUrl}/${id}`, newObject)\n    return req.then(res => res.data)\n}\n\nconst remove = (id) => {\n    const req = axios.delete(baseUrl, id)\n    return req.then(res => res.data)\n}\n\nexport default { getAll, create, update, remove }"]},"metadata":{},"sourceType":"module"}