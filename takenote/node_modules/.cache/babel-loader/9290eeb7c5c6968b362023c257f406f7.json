{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/Note.js\";\nimport React from 'react'; //import noteService from '../services/notes';\n\nimport { Card, CardTitle, CardText, Row, Col, Button, Badge } from 'reactstrap';\n\nconst Note = ({\n  note,\n  notesList,\n  setNotesList\n}) => {\n  /*const deleteNote = () => {\n      noteService\n          .remove(note.id)\n          .then(\n              () => setNotesList(notesList.filter(n => n !== note.id)),    //Why doesn't this update the state?\n              console.log(\"Note has been deleted but view won't update. Sad panda.\")\n          );\n  }*/\n  return /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"mx-2 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, note.title)), /*#__PURE__*/React.createElement(Col, {\n    xs: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    close: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"border-bottom pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"font-weight-light font-italic text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, note.date, \"  \", note.time)), /*#__PURE__*/React.createElement(CardText, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, note.content), /*#__PURE__*/React.createElement(Row, {\n    className: \"text-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, note.important ? /*#__PURE__*/React.createElement(Badge, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 39\n    }\n  }, \"Important\") : null)));\n};\n\nexport default Note;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/Note.js"],"names":["React","Card","CardTitle","CardText","Row","Col","Button","Badge","Note","note","notesList","setNotesList","title","date","time","content","important"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8CC,MAA9C,EAAsDC,KAAtD,QAAmE,YAAnE;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,KAAuC;AAEhD;;;;;;;;AASA,sBACI,oBAAE,IAAF;AAAO,IAAA,IAAI,MAAX;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCF,IAAI,CAACG,KAA9C,CADJ,CADJ,eAII,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,eASI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,8CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,IAAI,CAACI,IADV,QACkBJ,IAAI,CAACK,IADvB,CADJ,CATJ,eAcI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BL,IAAI,CAACM,OAAjC,CAdJ,eAeI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,CAACO,SAAL,gBAAiB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB,GAAyD,IAD9D,CADJ,CAfJ,CADJ;AAuBH,CAlCD;;AAoCA,eAAeR,IAAf","sourcesContent":["import React from 'react';\n//import noteService from '../services/notes';\nimport { Card, CardTitle, CardText, Row, Col, Button, Badge } from 'reactstrap';\n\nconst Note = ({ note, notesList, setNotesList }) => {\n\n    /*const deleteNote = () => {\n        noteService\n            .remove(note.id)\n            .then(\n                () => setNotesList(notesList.filter(n => n !== note.id)),    //Why doesn't this update the state?\n                console.log(\"Note has been deleted but view won't update. Sad panda.\")\n            );\n    }*/\n\n    return (\n        < Card body className=\"mx-2 my-3\" >\n            <Row>\n                <Col>\n                    <CardTitle className=\"font-weight-bold\">{note.title}</CardTitle>\n                </Col>\n                <Col xs=\"1\">\n                    <Button close />\n                </Col>\n            </Row>\n            <Row className=\"border-bottom pb-2\">\n                <Col className=\"font-weight-light font-italic text-secondary\">\n                    {note.date}  {note.time}\n                </Col>\n            </Row>\n            <CardText className=\"mt-4\">{note.content}</CardText>\n            <Row className=\"text-right\">\n                <Col>\n                    {note.important ? <Badge color=\"info\">Important</Badge> : null}\n                </Col>\n            </Row>\n        </Card >\n    );\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}