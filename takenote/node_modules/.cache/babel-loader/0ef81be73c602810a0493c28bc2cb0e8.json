{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\nlet notes = [{\n  title: \"Hello\",\n  id: 1,\n  content: \"HTML is easy\",\n  date: \"2019-05-30T17:30:31.098Z\",\n  important: true\n}, {\n  title: \"This is title\",\n  id: 2,\n  content: \"Browser can execute only Javascript\",\n  date: \"2019-05-30T18:39:34.091Z\",\n  important: false\n}, {\n  title: \"Also a title\",\n  id: 3,\n  content: \"GET and POST are the most important methods of HTTP protocol\",\n  date: \"2019-05-30T19:20:14.298Z\",\n  important: true\n}];\n\nconst App = () => {\n  const [newNote, setNewNote] = useState(false);\n\n  const handleNewNote = () => {\n    setNewNote(!newNote);\n  };\n\n  useEffect(() => {\n    axios.get();\n  }, []); //If no notes to display, show note editor instead.\n\n  if (notes.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      createNote: handleNewNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NoteEditor, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    })));\n  } //If there are notes, show NoteList unless newNote is pressed, then show NoteEditor.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    createNote: handleNewNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, newNote ? /*#__PURE__*/React.createElement(NoteEditor, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(NotesList, {\n    notesList: notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 45\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js"],"names":["React","useState","useEffect","axios","Toolbar","NotesList","NoteEditor","Container","notes","title","id","content","date","important","App","newNote","setNewNote","handleNewNote","get","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,IAAIC,KAAK,GAAG,CACR;AACIC,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,EAAE,EAAE,CAFR;AAGIC,EAAAA,OAAO,EAAE,cAHb;AAIIC,EAAAA,IAAI,EAAE,0BAJV;AAKIC,EAAAA,SAAS,EAAE;AALf,CADQ,EAQR;AACIJ,EAAAA,KAAK,EAAE,eADX;AAEIC,EAAAA,EAAE,EAAE,CAFR;AAGIC,EAAAA,OAAO,EAAE,qCAHb;AAIIC,EAAAA,IAAI,EAAE,0BAJV;AAKIC,EAAAA,SAAS,EAAE;AALf,CARQ,EAeR;AACIJ,EAAAA,KAAK,EAAE,cADX;AAEIC,EAAAA,EAAE,EAAE,CAFR;AAGIC,EAAAA,OAAO,EAAE,8DAHb;AAIIC,EAAAA,IAAI,EAAE,0BAJV;AAKIC,EAAAA,SAAS,EAAE;AALf,CAfQ,CAAZ;;AAwBA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMgB,aAAa,GAAG,MAAM;AACxBD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACe,GAAN;AACH,GAFQ,EAEN,EAFM,CAAT,CAPc,CAWd;;AACA,MAAIV,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AACpB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,UAAU,EAAEF,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH,GArBa,CAuBd;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEA,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,OAAO,gBAAG,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAoB,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,CAFJ,CADJ;AAQH,CAhCD;;AAkCA,eAAeM,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nlet notes = [\n    {\n        title: \"Hello\",\n        id: 1,\n        content: \"HTML is easy\",\n        date: \"2019-05-30T17:30:31.098Z\",\n        important: true\n    },\n    {\n        title: \"This is title\",\n        id: 2,\n        content: \"Browser can execute only Javascript\",\n        date: \"2019-05-30T18:39:34.091Z\",\n        important: false\n    },\n    {\n        title: \"Also a title\",\n        id: 3,\n        content: \"GET and POST are the most important methods of HTTP protocol\",\n        date: \"2019-05-30T19:20:14.298Z\",\n        important: true\n    }\n];\n\nconst App = () => {\n    const [newNote, setNewNote] = useState(false);\n\n    const handleNewNote = () => {\n        setNewNote(!newNote);\n    }\n\n    useEffect(() => {\n        axios.get()\n    }, []);\n\n    //If no notes to display, show note editor instead.\n    if (notes.length === 0) {\n        return (\n            <div>\n                <Toolbar createNote={handleNewNote} />\n                <Container>\n                    <NoteEditor />\n                </Container>\n            </div>\n        );\n    }\n\n    //If there are notes, show NoteList unless newNote is pressed, then show NoteEditor.\n    return (\n        <div>\n            <Toolbar createNote={handleNewNote} />\n            <Container>\n                {newNote ? <NoteEditor /> : <NotesList notesList={notes} />}\n            </Container>\n        </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}