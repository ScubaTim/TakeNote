{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js\";\nimport React, { useState, useCallback } from 'react';\nimport { Row, Col, Input, Label } from 'reactstrap';\nimport Note from './Note';\n\nconst NotesList = ({\n  notesList,\n  setNotes\n}) => {\n  const [showImportant, toggleShowImportant] = useState(false);\n  const filteredNotesList = useCallback(() => notesList.filter(note => showImportant ? note.important : note).map((note, i) => /*#__PURE__*/React.createElement(Col, {\n    key: i,\n    xs: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Note, {\n    note: note,\n    notesList: notesList,\n    setNotes: setNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }\n  }))), [showImportant, notesList, setNotes]);\n  const handleShowImportant = useCallback(() => {\n    toggleShowImportant(!showImportant);\n  }, [showImportant]);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-direction-column justify-content-between align-items-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }, filteredNotesList()))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    sm: 12,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    className: \"ml-4 pl-1 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    onClick: handleShowImportant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }), showImportant ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 46\n    }\n  }, \"Show All\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 70\n    }\n  }, \"Show Important Only\"))))));\n};\n\nexport default NotesList;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js"],"names":["React","useState","useCallback","Row","Col","Input","Label","Note","NotesList","notesList","setNotes","showImportant","toggleShowImportant","filteredNotesList","filter","note","important","map","i","handleShowImportant"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,KAA1B,QAAuC,YAAvC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA6B;AAC3C,QAAM,CAACC,aAAD,EAAgBC,mBAAhB,IAAuCX,QAAQ,CAAC,KAAD,CAArD;AAEA,QAAMY,iBAAiB,GAAGX,WAAW,CACjC,MACIO,SAAS,CACJK,MADL,CACaC,IAAD,IAAUJ,aAAa,GAAGI,IAAI,CAACC,SAAR,GAAoBD,IADvD,EAEKE,GAFL,CAES,CAACF,IAAD,EAAOG,CAAP,kBACD,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,CAAV;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAkB,IAAA,SAAS,EAAEN,SAA7B;AAAwC,IAAA,QAAQ,EAAEC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAHR,CAF6B,EAS9B,CAACC,aAAD,EAAgBF,SAAhB,EAA2BC,QAA3B,CAT8B,CAArC;AAWA,QAAMS,mBAAmB,GAAGjB,WAAW,CACnC,MAAM;AACFU,IAAAA,mBAAmB,CAAC,CAACD,aAAF,CAAnB;AACH,GAHkC,EAGhC,CAACA,aAAD,CAHgC,CAAvC;AAKA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,iBAAiB,EADtB,CADJ,CADJ,CADJ,eAQI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,CAAzB;AAA4B,IAAA,EAAE,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAEM,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKR,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAF7C,CAFJ,CADJ,CARJ,CADJ,CADJ;AAuBH,CA1CD;;AA4CA,eAAeH,SAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { Row, Col, Input, Label } from 'reactstrap';\n\nimport Note from './Note';\n\n\nconst NotesList = ({ notesList, setNotes }) => {\n    const [showImportant, toggleShowImportant] = useState(false);\n\n    const filteredNotesList = useCallback(\n        () => (\n            notesList\n                .filter((note) => showImportant ? note.important : note)\n                .map((note, i) => (\n                    <Col key={i} xs=\"4\">\n                        <Note note={note} notesList={notesList} setNotes={setNotes} />\n                    </Col>\n                ))\n        ), [showImportant, notesList, setNotes]);\n\n    const handleShowImportant = useCallback(\n        () => {\n            toggleShowImportant(!showImportant)\n        }, [showImportant])\n\n    return (\n        <Row>\n            <Col >\n                <Row className=\"mb-5\">\n                    <Col xs={12} sm={12} md={6} lg={4} >\n                        <Row className=\"d-flex flex-direction-column justify-content-between align-items-between\">\n                            {filteredNotesList()}\n                        </Row>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={12} sm={12} md={6} lg={4} >\n                        <hr />\n                        <Label check className=\"ml-4 pl-1 my-3\">\n                            <Input type=\"checkbox\" onClick={handleShowImportant} />\n                            {showImportant ? <span>Show All</span> : <span>Show Important Only</span>}\n                        </Label>\n                    </Col>\n                </Row>\n            </Col>\n        </Row>\n\n    )\n};\n\nexport default NotesList;"]},"metadata":{},"sourceType":"module"}