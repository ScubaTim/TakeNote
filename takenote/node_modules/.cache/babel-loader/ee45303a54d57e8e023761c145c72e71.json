{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/Note.js\";\nimport React, { useCallback } from 'react';\nimport noteService from '../services/note';\nimport { Card, CardTitle, CardText, Row, Col, Button, Badge } from 'reactstrap';\n\nconst Note = ({\n  note,\n  notesList,\n  setNotes\n}) => {\n  const handleRemoveNote = useCallback(() => {\n    //Removes note from database\n    noteService.remove(note.id).then(removed => removed).catch(error => {\n      alert(`There was an error removing note: ${error}`);\n    }); //New state minus the removed note\n\n    setNotes(notesList.filter(n => n.id !== note.id));\n  }, [setNotes, notesList, note]);\n  return /*#__PURE__*/React.createElement(Card, {\n    body: true,\n    className: \"mx-4 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    className: \"font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, note.title.toUpperCase())), /*#__PURE__*/React.createElement(Col, {\n    xs: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    close: true,\n    onClick: handleRemoveNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"border-bottom pb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"font-weight-light font-italic text-secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, note.date, note.time))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardText, {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, note.content))), note && note.important && /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, note.important ? /*#__PURE__*/React.createElement(Badge, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }\n  }, \"Important\") : null)));\n};\n\nexport default Note;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/Note.js"],"names":["React","useCallback","noteService","Card","CardTitle","CardText","Row","Col","Button","Badge","Note","note","notesList","setNotes","handleRemoveNote","remove","id","then","removed","catch","error","alert","filter","n","title","toUpperCase","date","time","content","important"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,GAApC,EAAyCC,GAAzC,EAA8CC,MAA9C,EAAsDC,KAAtD,QAAmE,YAAnE;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AAE5C,QAAMC,gBAAgB,GAAGb,WAAW,CAAC,MAAM;AACvC;AACAC,IAAAA,WAAW,CACNa,MADL,CACYJ,IAAI,CAACK,EADjB,EAEKC,IAFL,CAEUC,OAAO,IAAIA,OAFrB,EAGKC,KAHL,CAGYC,KAAD,IAAW;AACdC,MAAAA,KAAK,CAAE,qCAAoCD,KAAM,EAA5C,CAAL;AACH,KALL,EAFuC,CASvC;;AACAP,IAAAA,QAAQ,CAACD,SAAS,CAACU,MAAV,CAAiBC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASL,IAAI,CAACK,EAApC,CAAD,CAAR;AACH,GAXmC,EAWjC,CAACH,QAAD,EAAWD,SAAX,EAAsBD,IAAtB,CAXiC,CAApC;AAaA,sBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCA,IAAI,CAACa,KAAL,CAAWC,WAAX,EAAzC,CADJ,CADJ,eAII,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,OAAO,EAAEX,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CADJ,eASI,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,8CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgEH,IAAI,CAACe,IAArE,EAA2Ef,IAAI,CAACgB,IAAhF,CADJ,CADJ,CATJ,eAcI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BhB,IAAI,CAACiB,OAAjC,CADJ,CADJ,CAdJ,EAmBKjB,IAAI,IAAIA,IAAI,CAACkB,SAAb,iBACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,IAAI,CAACkB,SAAL,gBAAiB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjB,GAAyD,IAD9D,CADJ,CApBR,CADJ;AA8BH,CA7CD;;AA+CA,eAAenB,IAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport noteService from '../services/note'\nimport { Card, CardTitle, CardText, Row, Col, Button, Badge } from 'reactstrap';\n\nconst Note = ({ note, notesList, setNotes }) => {\n\n    const handleRemoveNote = useCallback(() => {\n        //Removes note from database\n        noteService\n            .remove(note.id)\n            .then(removed => removed)\n            .catch((error) => {\n                alert(`There was an error removing note: ${error}`)\n            })\n\n        //New state minus the removed note\n        setNotes(notesList.filter(n => n.id !== note.id))\n    }, [setNotes, notesList, note]);\n\n    return (\n        <Card body className=\"mx-4 my-3\" >\n            <Row>\n                <Col>\n                    <CardTitle className=\"font-weight-bold\">{note.title.toUpperCase()}</CardTitle>\n                </Col>\n                <Col xs=\"1\">\n                    <Button close onClick={handleRemoveNote} />\n                </Col>\n            </Row>\n            <Row className=\"border-bottom pb-2\">\n                <Col >\n                    <span className=\"font-weight-light font-italic text-secondary\">{note.date}{note.time}</span>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <CardText className=\"mt-4\">{note.content}</CardText>\n                </Col>\n            </Row>\n            {note && note.important && (\n                <Row>\n                    <Col>\n                        {note.important ? <Badge color=\"info\">Important</Badge> : null}\n                    </Col>\n                </Row>\n            )}\n\n        </Card >\n    );\n}\n\nexport default Note;"]},"metadata":{},"sourceType":"module"}