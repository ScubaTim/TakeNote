{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(false);\n  const [viewToggle, setViewToggle] = useState(false);\n\n  const handleNewNote = () => {\n    setNewNote(!newNote);\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/notes').then(res => {\n      const notes = res.data;\n      setNotes(notes);\n    });\n  }, []);\n\n  const handleViewToggle = () => {\n    setViewToggle(!viewToggle);\n  }; //If no notes to display, show note editor instead.\n\n\n  if (notes.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      createNote: handleNewNote,\n      toggle: handleViewToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NoteEditor, {\n      notes: notes,\n      setNotes: setNotes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }\n    })));\n  } //If there are notes, show NoteList unless newNote is pressed, then show NoteEditor.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    createNote: handleNewNote,\n    toggle: handleViewToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, newNote ? /*#__PURE__*/React.createElement(NoteEditor, {\n    notes: notes,\n    setNotes: setNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(NotesList, {\n    notesList: notes,\n    setNotes: setNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 79\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/App.js"],"names":["React","useState","useEffect","axios","Toolbar","NotesList","NoteEditor","Container","App","notes","setNotes","newNote","setNewNote","viewToggle","setViewToggle","handleNewNote","get","then","res","data","handleViewToggle","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMc,aAAa,GAAG,MAAM;AACxBH,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CACAa,GADL,CACS,6BADT,EAEKC,IAFL,CAEUC,GAAG,IAAI;AACT,YAAMT,KAAK,GAAGS,GAAG,CAACC,IAAlB;AACAT,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KALL;AAMH,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMW,gBAAgB,GAAG,MAAM;AAC3BN,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAFD,CAlBc,CAsBd;;;AACA,MAAIJ,KAAK,CAACY,MAAN,KAAiB,CAArB,EAAwB;AACpB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAS,MAAA,UAAU,EAAEN,aAArB;AAAoC,MAAA,MAAM,EAAEK,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEX,KAAnB;AAA0B,MAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,CADJ;AAQH,GAhCa,CAkCd;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,UAAU,EAAEK,aAArB;AAAoC,IAAA,MAAM,EAAEK,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKT,OAAO,gBAAG,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,KAAnB;AAA0B,IAAA,QAAQ,EAAEC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBAAsD,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAED,KAAtB;AAA6B,IAAA,QAAQ,EAAEC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADlE,CAFJ,CADJ;AAQH,CA3CD;;AA6CA,eAAeF,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container } from 'reactstrap';\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [newNote, setNewNote] = useState(false);\n    const [viewToggle, setViewToggle] = useState(false);\n\n    const handleNewNote = () => {\n        setNewNote(!newNote);\n    }\n\n    useEffect(() => {\n        axios\n            .get('http://localhost:3001/notes')\n            .then(res => {\n                const notes = res.data\n                setNotes(notes);\n            })\n    }, []);\n\n    const handleViewToggle = () => {\n        setViewToggle(!viewToggle);\n    }\n\n    //If no notes to display, show note editor instead.\n    if (notes.length === 0) {\n        return (\n            <div>\n                <Toolbar createNote={handleNewNote} toggle={handleViewToggle} />\n                <Container>\n                    <NoteEditor notes={notes} setNotes={setNotes} />\n                </Container>\n            </div>\n        );\n    }\n\n    //If there are notes, show NoteList unless newNote is pressed, then show NoteEditor.\n    return (\n        <div>\n            <Toolbar createNote={handleNewNote} toggle={handleViewToggle} />\n            <Container>\n                {newNote ? <NoteEditor notes={notes} setNotes={setNotes} /> : <NotesList notesList={notes} setNotes={setNotes} />}\n            </Container>\n        </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}