{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js\";\nimport React, { useState } from 'react';\nimport Note from './Note';\nimport styled from 'styled-components';\nimport { Row, Col, Input, Label } from 'reactstrap'; //The \"Grid\"\n\nconst ListField = styled('div')`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: space-between;\n`;\n\nconst NotesList = ({\n  notesList,\n  setNotes\n}) => {\n  const [showImportant, setShowImportant] = useState(false);\n\n  const toggleImportantOnly = () => {\n    setShowImportant(!showImportant);\n  };\n\n  const important = /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    className: \"ml-4 pl-1 my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    onClick: () => toggleImportantOnly(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), showImportant ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 34\n    }\n  }, \"Show Important Only\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 69\n    }\n  }, \"Show All\")));\n  /*\n  const Notes = notesList.map((note, i) => (\n      <Col key={i} xs=\"12\" sm=\"6\" md=\"4\" id={note.id}>\n          <Note note={note} notesList={notesList} setNotes={setNotes} />\n      </Col>\n  ));\n  console.log('Notes', Notes)\n  */\n  //Generates a list of only the important notes\n\n  const Notes = notesList.filter(note => note.important).map((note, i) => /*#__PURE__*/React.createElement(Col, {\n    key: i,\n    xs: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Note, {\n    note: note,\n    notesList: notesList,\n    setNotes: setNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }))); //Generates a list of all notes with correct columns\n\n  const notes = notesList.map((note, id) => /*#__PURE__*/React.createElement(Col, {\n    key: id,\n    xs: \"12\",\n    sm: \"6\",\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Note, {\n    note: note,\n    notesList: notesList,\n    setNotes: setNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })));\n  console.log(notes);\n\n  if (showImportant) {}\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListField, {\n    className: \"py-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, Notes)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, important));\n};\n\nexport default NotesList;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NotesList.js"],"names":["React","useState","Note","styled","Row","Col","Input","Label","ListField","NotesList","notesList","setNotes","showImportant","setShowImportant","toggleImportantOnly","important","Notes","filter","note","map","i","notes","id","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Note from './Note';\nimport styled from 'styled-components';\nimport { Row, Col, Input, Label } from 'reactstrap';\n\n//The \"Grid\"\nconst ListField = styled('div')`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: space-between;\n`\n\nconst NotesList = ({ notesList, setNotes }) => {\n    const [showImportant, setShowImportant] = useState(false);\n\n    const toggleImportantOnly = () => {\n        setShowImportant(!showImportant);\n    }\n\n    const important = (\n        <Col>\n            <hr />\n            <Label check className=\"ml-4 pl-1 my-3\">\n                <Input type=\"checkbox\" onClick={() => toggleImportantOnly()} />\n                {showImportant ? <span>Show Important Only</span> : <span>Show All</span>}\n            </Label>\n        </Col>\n    )\n    /*\n    const Notes = notesList.map((note, i) => (\n        <Col key={i} xs=\"12\" sm=\"6\" md=\"4\" id={note.id}>\n            <Note note={note} notesList={notesList} setNotes={setNotes} />\n        </Col>\n    ));\n    console.log('Notes', Notes)\n    */\n\n    //Generates a list of only the important notes\n    const Notes = (\n        notesList\n            .filter((note) => note.important)\n            .map((note, i) => (\n                <Col key={i} xs=\"4\">\n                    <Note note={note} notesList={notesList} setNotes={setNotes} />\n                </Col>\n            ))\n    );\n    //Generates a list of all notes with correct columns\n    const notes = notesList.map((note, id) => (\n        <Col key={id} xs=\"12\" sm=\"6\" md=\"4\">\n            <Note note={note} notesList={notesList} setNotes={setNotes} />\n        </Col>\n    ));\n    console.log(notes)\n\n\n\n\n\n\n\n    if (showImportant) {\n\n    }\n\n\n\n    return (\n        <>\n            <Row className=\"mb-5\">\n                <Col>\n                    <ListField className=\"py-3\">\n                        <Row>\n                            {Notes}\n                        </Row>\n                    </ListField>\n                </Col>\n            </Row>\n            <Row>\n                {important}\n            </Row>\n        </>\n    );\n}\n\n\n\nexport default NotesList;"]},"metadata":{},"sourceType":"module"}