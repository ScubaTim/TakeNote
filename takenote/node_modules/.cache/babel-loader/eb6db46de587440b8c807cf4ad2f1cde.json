{"ast":null,"code":"var _jsxFileName = \"/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NoteEditor.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst NoteEditor = ({\n  notes,\n  setNotes\n}) => {\n  const [noteContent, setNoteContent] = useState(\"\");\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [isImportant, setIsImportant] = useState(false);\n\n  const generateId = () => {\n    const maxId = notes.length > 0 ? Math.max(...notes.map(n => n.id)) : 0;\n    return maxId + 1;\n  };\n\n  const handleAddNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      title: newTitle,\n      content: noteContent,\n      time: new Date().toLocaleTimeString(),\n      date: new Date().toLocaleDateString(),\n      important: isImportant,\n      id: generateId()\n    };\n    console.log(notes);\n    axios.post('http://localhost:3001/notes', noteObject).then(res => {\n      setNotes(notes.concat(res.data));\n    });\n  };\n\n  const handleTitleChange = e => {\n    setNewTitle(e.target.value);\n  };\n\n  const handleNoteContentChange = e => {\n    setNoteContent(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"border px-5 py-4  mx-4 my-4\",\n    onSubmit: handleAddNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"New Note\"), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Title:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"title\",\n    onChange: handleTitleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"noteText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Body:\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    id: \"noteText\",\n    onChange: handleNoteContentChange,\n    style: {\n      minHeight: \"50vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"text-right my-2 mr-1\",\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"checkbox\",\n    onClick: () => setIsImportant(!isImportant),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    check: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Important\"))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"Save\"));\n};\n\nexport default NoteEditor;","map":{"version":3,"sources":["/Users/timgentry/Desktop/Dev/takenote/takenote/src/components/NoteEditor.js"],"names":["React","useState","axios","Button","Form","FormGroup","Label","Input","NoteEditor","notes","setNotes","noteContent","setNoteContent","newTitle","setNewTitle","isImportant","setIsImportant","generateId","maxId","length","Math","max","map","n","id","handleAddNote","event","preventDefault","noteObject","title","content","time","Date","toLocaleTimeString","date","toLocaleDateString","important","console","log","post","then","res","concat","data","handleTitleChange","e","target","value","handleNoteContentChange","minHeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nconst NoteEditor = ({ notes, setNotes }) => {\n\n    const [noteContent, setNoteContent] = useState(\"\");\n    const [newTitle, setNewTitle] = useState(\"\");\n    const [isImportant, setIsImportant] = useState(false);\n\n    const generateId = () => {\n        const maxId = notes.length > 0\n            ? Math.max(...notes.map(n => n.id))\n            : 0;\n        return maxId + 1;\n    }\n\n    const handleAddNote = (event) => {\n        event.preventDefault();\n        const noteObject = {\n            title: newTitle,\n            content: noteContent,\n            time: new Date().toLocaleTimeString(),\n            date: new Date().toLocaleDateString(),\n            important: isImportant,\n            id: generateId()\n        }\n        console.log(notes);\n\n        axios\n            .post('http://localhost:3001/notes', noteObject)\n            .then(res => {\n                setNotes(notes.concat(res.data))\n            });\n    }\n\n    const handleTitleChange = (e) => {\n        setNewTitle(e.target.value);\n    }\n\n    const handleNoteContentChange = (e) => {\n        setNoteContent(e.target.value);\n    }\n\n\n    return (\n        <Form className=\"border px-5 py-4  mx-4 my-4\" onSubmit={handleAddNote}>\n            <h2 className=\"text-center\">New Note</h2>\n            <FormGroup>\n                <Label for=\"title\">Title:</Label>\n                <Input type=\"text\" id=\"title\" onChange={handleTitleChange} />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"noteText\">Body:</Label>\n                <Input type=\"textarea\" id=\"noteText\" onChange={handleNoteContentChange} style={{ minHeight: \"50vh\" }} />\n            </FormGroup>\n            <FormGroup className=\"text-right my-2 mr-1\" check>\n                <Input type=\"checkbox\" onClick={() => setIsImportant(!isImportant)} />\n                <Label check>\n                    <strong>Important</strong>\n                </Label>\n            </FormGroup>\n            <Button type=\"submit\" color=\"primary\">Save</Button>\n        </Form>\n    );\n};\n\nexport default NoteEditor;"]},"metadata":{},"sourceType":"module"}