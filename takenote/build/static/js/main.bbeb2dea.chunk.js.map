{"version":3,"sources":["services/note.js","components/Toolbar.js","components/Note.js","components/NotesList.js","components/NoteEditor.js","components/App.js","index.js"],"names":["axios","get","then","response","data","newObject","post","id","delete","Toolbar","editorView","toggleEditorView","label","btnColor","Navbar","color","light","className","NavbarBrand","Nav","NavItem","Button","onClick","Note","note","notesList","setNotes","handleRemoveNote","useCallback","noteService","removed","catch","error","alert","filter","n","Card","body","Row","Col","CardTitle","title","xs","close","date","time","CardText","content","important","Badge","NotesList","useState","showImportant","toggleShowImportant","filteredNotesList","map","i","key","handleShowImportant","Label","check","Input","type","NoteEditor","notes","noteContent","setNoteContent","newTitle","setNewTitle","isImportant","setIsImportant","handleAddNote","e","preventDefault","returnedNote","concat","length","handleNewTitle","target","value","handleNoteContent","handleIsImportant","Form","onSubmit","FormGroup","for","onChange","style","minHeight","App","setEditorView","useEffect","initialNotes","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbeb2dea.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (newObject, id) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react';\nimport { Navbar, NavbarBrand, Nav, NavItem, Button } from 'reactstrap';\n\n\nconst Toolbar = ({ editorView, toggleEditorView }) => {\n\n    const label = editorView ? <span>Cancel</span> : <span><strong>+</strong> New Note</span>\n    const btnColor = editorView ? 'warning' : 'info'\n\n    return (\n        <Navbar color=\"light\" light className=\"border-bottom\">\n            <NavbarBrand>\n                <strong>TakeNote</strong>\n            </NavbarBrand>\n            <Nav>\n                <NavItem>\n                    <Button color={btnColor} onClick={toggleEditorView}>\n                        {label}\n                    </Button>\n                </NavItem>\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default Toolbar;","import React, { useCallback } from 'react';\nimport { Card, CardTitle, CardText, Row, Col, Button, Badge } from 'reactstrap';\n\nimport noteService from '../services/note'\n\n\nconst Note = ({ note, notesList, setNotes }) => {\n\n    const handleRemoveNote = useCallback(() => {\n        //Removes note from database\n        noteService\n            .remove(note.id)\n            .then(removed => removed)\n            .catch((error) => {\n                alert(`There was an error removing the note: ${error}`)\n            })\n\n        //New state minus the removed note\n        setNotes(notesList.filter(n => n.id !== note.id))\n    }, [setNotes, notesList, note]);\n\n    return (\n        <Card body className=\"mx-4 my-3\" >\n            <Row>\n                <Col>\n                    <CardTitle className=\"font-weight-bold\">{note.title}</CardTitle>\n                </Col>\n                <Col xs=\"1\">\n                    <Button close onClick={handleRemoveNote} />\n                </Col>\n            </Row>\n            <Row className=\"border-bottom pb-2\">\n                <Col >\n                    <span className=\"font-weight-light font-italic text-secondary\">{note.date}{note.time}</span>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <CardText className=\"mt-4\">{note.content}</CardText>\n                </Col>\n            </Row>\n            {note && note.important && (\n                <Row>\n                    <Col>\n                        <Badge color=\"info\">Important</Badge>\n                    </Col>\n                </Row>\n            )}\n        </Card >\n    );\n}\n\nexport default Note;","import React, { useState, useCallback } from 'react';\nimport { Row, Col, Input, Label } from 'reactstrap';\n\nimport Note from './Note';\n\n\nconst NotesList = ({ notesList, setNotes }) => {\n    const [showImportant, toggleShowImportant] = useState(false);\n\n    const filteredNotesList = useCallback(\n        () => (\n            notesList\n                .filter((note) => showImportant ? note.important : note)\n                .map((note, i) => (\n                    <Col key={i} xs=\"4\">\n                        <Note note={note} notesList={notesList} setNotes={setNotes} />\n                    </Col>\n                ))\n        ), [showImportant, notesList, setNotes]);\n\n    const handleShowImportant = useCallback(\n        () => {\n            toggleShowImportant(!showImportant)\n        }, [showImportant])\n\n    return (\n        <>\n            <Row className=\"mb-5\">\n                <Col>\n                    <Row className=\"d-flex flex-direction-column justify-content-between align-items-between\">\n                        {filteredNotesList()}\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <hr />\n                    <Label check className=\"ml-4 pl-1 my-3\">\n                        <Input type=\"checkbox\" onClick={handleShowImportant} />\n                        {showImportant ? <span>Show All</span> : <span>Show Important Only</span>}\n                    </Label>\n                </Col>\n            </Row>\n        </>\n    )\n};\n\nexport default NotesList;","import React, { useState, useCallback } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nimport noteService from '../services/note';\n\n\nconst NoteEditor = ({ notes, setNotes, toggleEditorView }) => {\n    const [noteContent, setNoteContent] = useState(\"\");\n    const [newTitle, setNewTitle] = useState(\"\");\n    const [isImportant, setIsImportant] = useState(false);\n\n    const handleAddNote = useCallback(\n        (e) => {\n            e.preventDefault();\n\n            const newNote = {\n                title: newTitle,\n                content: noteContent,\n                important: isImportant,\n            }\n\n            noteService\n                .create(newNote)\n                .then((returnedNote) => {\n                    setNotes(notes.concat(returnedNote))\n                })\n                .catch((error) => {\n                    alert(`There was an error adding notes. Error Message: ${error}`)\n                })\n            //Spookiness logs go here \\/  :(\n\n            //toggleEditorViews away from the editor on submit, back to NotesList. If () statement is necessary, or first note doesn't cause toggle\n            if (notes.length > 0) {\n                toggleEditorView();\n            }\n        }, [newTitle, noteContent, isImportant, toggleEditorView, notes, setNotes])\n\n    const handleNewTitle = useCallback(\n        (e) => {\n            setNewTitle(e.target.value)\n        }, [])\n\n    const handleNoteContent = useCallback(\n        (e) => {\n            setNoteContent(e.target.value)\n        }, [])\n\n    const handleIsImportant = useCallback(\n        () => {\n            setIsImportant(!isImportant)\n        }, [isImportant])\n\n    return (\n        <Form className=\"border px-3 pt-4 pb-2 my-4\" onSubmit={handleAddNote}>\n            <h2 className=\"text-center\">New Note</h2>\n            <FormGroup>\n                <Label for=\"title\">Title:</Label>\n                <Input type=\"text\" id=\"title\" onChange={handleNewTitle} />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"noteText\">Body:</Label>\n                <Input type=\"textarea\" id=\"noteText\" onChange={handleNoteContent} style={{ minHeight: \"38vh\" }} />\n            </FormGroup>\n            <Row>\n                <Col>\n                    <Button type=\"submit\" color=\"primary\">Save</Button>\n                </Col>\n                <Col>\n                    <FormGroup className=\"text-right pt-2 mr-3\" check>\n                        <Input type=\"checkbox\" onClick={handleIsImportant} />\n                        <Label check className=\"mb-2 font-weight-bold\" >\n                            Mark Important\n                        </Label>\n                    </FormGroup>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nexport default NoteEditor;","import React, { useState, useEffect, useCallback } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport noteService from '../services/note';\n\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\n\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [editorView, setEditorView] = useState(false);\n\n    useEffect(() => {\n        //Get notes from database\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n            .catch((error) => {\n                alert(`There was an error getting notes: ${error}`)\n            })\n    }, []);\n\n    const toggleEditorView = useCallback(\n        () => {\n            setEditorView(!editorView);\n        }, [editorView]);\n\n    return (\n        <>\n            <Toolbar toggleEditorView={toggleEditorView} editorView={editorView} />\n            <Container>\n                <Row>\n                    <Col>\n                        {editorView || notes.length === 0\n                            ? <NoteEditor notes={notes} setNotes={setNotes} toggleEditorView={toggleEditorView} />\n                            : <NotesList notesList={notes} setNotes={setNotes} toggleEditorView={toggleEditorView} />}\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}