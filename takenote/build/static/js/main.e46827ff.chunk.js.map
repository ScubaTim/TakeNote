{"version":3,"sources":["services/note.js","components/Toolbar.js","components/Note.js","components/NotesList.js","components/NoteEditor.js","components/App.js","index.js"],"names":["axios","get","then","res","data","newObject","post","id","delete","Toolbar","toggle","toggleView","label","Navbar","color","light","className","NavbarBrand","Nav","NavItem","Button","onClick","Note","note","notesList","setNotes","Card","body","Row","Col","CardTitle","title","toUpperCase","xs","close","noteService","removed","filter","handleRemoveNote","date","time","CardText","content","important","Badge","ListField","styled","NotesList","useState","showImportant","setShowImportant","handleImportantOnly","Notes","map","i","key","sm","md","Label","check","Input","type","NoteEditor","notes","noteContent","setNoteContent","newTitle","setNewTitle","isImportant","setIsImportant","Form","onSubmit","event","preventDefault","returnedNote","concat","length","FormGroup","for","onChange","e","target","value","style","minHeight","App","toggleEditorView","setToggleEditorView","useEffect","initialNotes","handleToggle","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAuBe,EApBA,WAEX,OADYA,IAAMC,IAHN,UAIDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAkBhB,EAfA,SAACC,GAEZ,OADYL,IAAMM,KARN,SAQoBD,GACrBH,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAahB,EALA,SAACG,GAEZ,OADYP,IAAMQ,OAAN,UAlBA,SAkBA,YAA2BD,IAC5BL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,S,wCCQhBK,EAnBC,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WACjBC,EAAQD,EAAa,SAAH,oBAExB,OACI,kBAACE,EAAA,EAAD,CAAQC,MAAM,QAAQC,OAAK,EAACC,UAAU,iBAClC,kBAACC,EAAA,EAAD,KACI,6CAEJ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQN,MAAOH,EAAa,UAAY,OAAQU,QAASX,GACpDE,O,wDCqBVU,EArCF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAY7B,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAACX,UAAU,aACjB,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWd,UAAU,oBAAoBO,EAAKQ,MAAMC,gBAExD,kBAACH,EAAA,EAAD,CAAKI,GAAG,KACJ,kBAACb,EAAA,EAAD,CAAQc,OAAK,EAACb,QAAS,kBAjBd,WACrB,IAAMd,EAAKgB,EAAKhB,GAEhB4B,EACY5B,GACPL,MAAK,SAAAkC,GAAO,OAAIA,KAErBX,EAASD,EAAUa,QAAO,SAAAd,GAAI,OAAIA,EAAKhB,KAAOA,MAUL+B,QAGrC,kBAACV,EAAA,EAAD,CAAKZ,UAAU,sBACX,kBAACa,EAAA,EAAD,CAAKb,UAAU,gDACVO,EAAKgB,KADV,KACkBhB,EAAKiB,OAG3B,kBAACC,EAAA,EAAD,CAAUzB,UAAU,QAAQO,EAAKmB,SACjC,kBAACd,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKN,EAAKoB,UAAY,kBAACC,EAAA,EAAD,CAAO9B,MAAM,QAAb,aAAwC,S,sNC7BvE,IAAM+B,EAAYC,YAAO,MAAPA,CAAH,KAiFPC,EA1EG,SAAC,GAA6B,IAA3BvB,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAAe,EACDuB,oBAAS,GADR,mBACpCC,EADoC,KACrBC,EADqB,KAGrCC,EAAsB,WACxBD,GAAkBD,IAGtB,IAAsB,IAAlBA,EAAyB,CACzB,IAAMG,EAAQ5B,EAAU6B,KAAI,SAAC9B,EAAM+B,GAAP,OACxB,kBAACzB,EAAA,EAAD,CAAK0B,IAAKD,EAAGrB,GAAG,KAAKuB,GAAG,IAAIC,GAAG,KAC3B,kBAAC,EAAD,CAAMlC,KAAMA,EAAMC,UAAWA,EAAWC,SAAUA,QAI1D,OACI,oCACI,kBAACG,EAAA,EAAD,CAAKZ,UAAU,QACX,kBAACa,EAAA,EAAD,KACI,kBAACgB,EAAD,CAAW7B,UAAU,QACjB,kBAACY,EAAA,EAAD,KACKwB,MAKjB,kBAACxB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,6BACA,kBAAC6B,EAAA,EAAD,CAAOC,OAAK,EAAC3C,UAAU,kBACnB,kBAAC4C,EAAA,EAAD,CAAOC,KAAK,WAAWxC,QAAS,kBAAM8B,OACtC,yDAQxB,IAAsB,IAAlBF,EAAwB,CACxB,IAAMG,EACF5B,EACKa,QAAO,SAACd,GAAD,OAAUA,EAAKoB,aACtBU,KAAI,SAAC9B,EAAM+B,GAAP,OACD,kBAACzB,EAAA,EAAD,CAAK0B,IAAKD,EAAGrB,GAAG,KACZ,kBAAC,EAAD,CAAMV,KAAMA,EAAMC,UAAWA,EAAWC,SAAUA,QAKlE,OACI,oCACI,kBAACG,EAAA,EAAD,CAAKZ,UAAU,QACX,kBAACa,EAAA,EAAD,KACI,kBAACgB,EAAD,KACI,kBAACjB,EAAA,EAAD,KACKwB,MAKjB,kBAACxB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,6BACA,kBAAC6B,EAAA,EAAD,CAAOC,OAAK,GACR,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWxC,QAAS,kBAAM8B,OAD1C,iB,gBCVTW,EA7DI,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOtC,EAAuB,EAAvBA,SAAUf,EAAa,EAAbA,OAAa,EAEVsC,mBAAS,IAFC,mBAEzCgB,EAFyC,KAE5BC,EAF4B,OAGhBjB,mBAAS,IAHO,mBAGzCkB,EAHyC,KAG/BC,EAH+B,OAIVnB,oBAAS,GAJC,mBAIzCoB,EAJyC,KAI5BC,EAJ4B,KAiChD,OACI,kBAACC,EAAA,EAAD,CAAMtD,UAAU,wBAAwBuD,SA5BtB,SAACC,GACnBA,EAAMC,iBAONtC,EANkB,CACdJ,MAAOmC,EACPxB,QAASsB,EACTrB,UAAWyB,IAKVlE,MAAK,SAACwE,GACHjD,EAASsC,EAAMY,OAAOD,OAG1BX,EAAMa,OAAS,GACflE,MAcA,wBAAIM,UAAU,eAAd,YACA,kBAAC6D,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,CAAOoB,IAAI,SAAX,UACA,kBAAClB,EAAA,EAAD,CAAOC,KAAK,OAAOtD,GAAG,QAAQwE,SAbhB,SAACC,GACvBb,EAAYa,EAAEC,OAAOC,WAcjB,kBAACL,EAAA,EAAD,KACI,kBAACnB,EAAA,EAAD,CAAOoB,IAAI,YAAX,SACA,kBAAClB,EAAA,EAAD,CAAOC,KAAK,WAAWtD,GAAG,WAAWwE,SAbjB,SAACC,GAC7Bf,EAAee,EAAEC,OAAOC,QAYwDC,MAAO,CAAEC,UAAW,WAEhG,kBAACxD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACT,EAAA,EAAD,CAAQyC,KAAK,SAAS/C,MAAM,WAA5B,SAEJ,kBAACe,EAAA,EAAD,KACI,kBAACgD,EAAA,EAAD,CAAW7D,UAAU,uBAAuB2C,OAAK,GAC7C,kBAACC,EAAA,EAAD,CAAOC,KAAK,WAAWxC,QAAS,kBAAMgD,GAAgBD,MACtD,kBAACV,EAAA,EAAD,CAAOC,OAAK,GACR,mD,QCHb0B,EA9CH,WAAO,IAAD,EACYrC,mBAAS,IADrB,mBACPe,EADO,KACAtC,EADA,OAEkCuB,oBAAS,GAF3C,mBAEPsC,EAFO,KAEWC,EAFX,KAIdC,qBAAU,WACNrD,IAEKjC,MAAK,SAAAuF,GACFhE,EAASgE,QAElB,IAEH,IAAMC,EAAe,WACjBH,GAAqBD,IAIzB,OAAqB,IAAjBvB,EAAMa,OAEF,6BACI,kBAAC,EAAD,CAASlE,OAAQgF,EAAc/E,WAAY2E,IAC3C,kBAACK,EAAA,EAAD,KACI,kBAAC/D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAYkC,MAAOA,EAAOtC,SAAUA,EAAUf,OAAQgF,QAU1E,6BACI,kBAAC,EAAD,CAAShF,OAAQgF,EAAc/E,WAAY2E,IAC3C,kBAACK,EAAA,EAAD,KACKL,EACK,kBAAC1D,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,KAAK,kBAAC,EAAD,CAAYkC,MAAOA,EAAOtC,SAAUA,EAAUf,OAAQgF,IAA3D,MACL,kBAAC9D,EAAA,EAAD,KAAK,kBAACC,EAAA,EAAD,KAAK,kBAAC,EAAD,CAAWL,UAAWuC,EAAOtC,SAAUA,S,MCzCvEmE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e46827ff.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n    const req = axios.get(baseUrl)\n    return req.then(res => res.data)\n}\n\nconst create = (newObject) => {\n    const req = axios.post(baseUrl, newObject)\n    return req.then(res => res.data)\n}\n\nconst update = (newObject, id) => {\n    const req = axios.put(`${baseUrl}/${id}`, newObject)\n    return req.then(res => res.data)\n}\n\nconst remove = (id) => {\n    const req = axios.delete(`${baseUrl}/${id}`)\n    return req.then(res => res.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react';\nimport {\n    Navbar,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    Button\n} from 'reactstrap';\n\nconst Toolbar = ({ toggle, toggleView }) => {\n    const label = toggleView ? 'Cancel' : `+ Create New Note`\n\n    return (\n        <Navbar color=\"light\" light className=\"border-bottom\">\n            <NavbarBrand>\n                <strong>TakeNote</strong>\n            </NavbarBrand>\n            <Nav>\n                <NavItem>\n                    <Button color={toggleView ? 'warning' : 'info'} onClick={toggle}>\n                        {label}\n                    </Button>\n                </NavItem>\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default Toolbar;","import React from 'react';\nimport noteService from '../services/note'\nimport { Card, CardTitle, CardText, Row, Col, Button, Badge } from 'reactstrap';\n\nconst Note = ({ note, notesList, setNotes }) => {\n\n    const handleRemoveNote = () => {\n        const id = note.id;\n\n        noteService\n            .remove(id)\n            .then(removed => removed)\n\n        setNotes(notesList.filter(note => note.id !== id))\n    }\n\n    return (\n        <Card body className=\"mx-4 my-3\" >\n            <Row>\n                <Col>\n                    <CardTitle className=\"font-weight-bold\">{note.title.toUpperCase()}</CardTitle>\n                </Col>\n                <Col xs=\"1\">\n                    <Button close onClick={() => handleRemoveNote()} />\n                </Col>\n            </Row>\n            <Row className=\"border-bottom pb-2\">\n                <Col className=\"font-weight-light font-italic text-secondary\">\n                    {note.date}  {note.time}\n                </Col>\n            </Row>\n            <CardText className=\"mt-4\">{note.content}</CardText>\n            <Row>\n                <Col>\n                    {note.important ? <Badge color=\"info\">Important</Badge> : null}\n                </Col>\n            </Row>\n        </Card >\n    );\n}\n\nexport default Note;","import React, { useState } from 'react';\nimport Note from './Note';\nimport styled from 'styled-components';\nimport { Row, Col, Input, Label } from 'reactstrap';\n\nexport const ListField = styled('div')`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: space-between;\n`\n\nconst NotesList = ({ notesList, setNotes }) => {\n    const [showImportant, setShowImportant] = useState(false);\n\n    const handleImportantOnly = () => {\n        setShowImportant(!showImportant);\n    }\n\n    if (showImportant === false) {\n        const Notes = notesList.map((note, i) => (\n            <Col key={i} xs=\"12\" sm=\"6\" md=\"4\">\n                <Note note={note} notesList={notesList} setNotes={setNotes} />\n            </Col>\n        ));\n\n        return (\n            <>\n                <Row className=\"mb-5\">\n                    <Col>\n                        <ListField className=\"py-3\">\n                            <Row>\n                                {Notes}\n                            </Row>\n                        </ListField>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <hr />\n                        <Label check className=\"ml-4 pl-1 my-3\">\n                            <Input type=\"checkbox\" onClick={() => handleImportantOnly()} />\n                            <span>Show Important Only</span>\n                        </Label>\n                    </Col>\n                </Row>\n            </>\n        );\n    }\n\n    if (showImportant === true) {\n        const Notes = (\n            notesList\n                .filter((note) => note.important)\n                .map((note, i) => (\n                    <Col key={i} xs=\"4\">\n                        <Note note={note} notesList={notesList} setNotes={setNotes} />\n                    </Col>\n                ))\n        );\n\n        return (\n            <>\n                <Row className=\"mb-5\">\n                    <Col>\n                        <ListField>\n                            <Row>\n                                {Notes}\n                            </Row>\n                        </ListField>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <hr />\n                        <Label check >\n                            <Input type=\"checkbox\" onClick={() => handleImportantOnly()} />\n                        Show All\n                        </Label>\n                    </Col>\n                </Row>\n            </>\n        )\n    }\n};\n\nexport default NotesList;","import React, { useState } from 'react';\nimport noteService from '../services/note';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\n\nconst NoteEditor = ({ notes, setNotes, toggle }) => {\n\n    const [noteContent, setNoteContent] = useState(\"\");\n    const [newTitle, setNewTitle] = useState(\"\");\n    const [isImportant, setIsImportant] = useState(false);\n\n    const handleAddNote = (event) => {\n        event.preventDefault();\n        const newObject = {\n            title: newTitle,\n            content: noteContent,\n            important: isImportant,\n        }\n\n        noteService\n            .create(newObject)\n            .then((returnedNote) => {\n                setNotes(notes.concat(returnedNote))\n            })\n\n        if (notes.length > 0) {\n            toggle();\n        }\n    }\n\n    const handleTitleChange = (e) => {\n        setNewTitle(e.target.value);\n    }\n\n    const handleNoteContentChange = (e) => {\n        setNoteContent(e.target.value);\n    }\n\n    return (\n        <Form className=\"border px-3 py-4 my-4\" onSubmit={handleAddNote}>\n            <h2 className=\"text-center\">New Note</h2>\n            <FormGroup>\n                <Label for=\"title\">Title:</Label>\n                <Input type=\"text\" id=\"title\" onChange={handleTitleChange} />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"noteText\">Body:</Label>\n                <Input type=\"textarea\" id=\"noteText\" onChange={handleNoteContentChange} style={{ minHeight: \"50vh\" }} />\n            </FormGroup>\n            <Row>\n                <Col>\n                    <Button type=\"submit\" color=\"primary\">Save</Button>\n                </Col>\n                <Col>\n                    <FormGroup className=\"text-right py-2 mr-3\" check>\n                        <Input type=\"checkbox\" onClick={() => setIsImportant(!isImportant)} />\n                        <Label check >\n                            <strong >Important</strong>\n                        </Label>\n                    </FormGroup>\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nexport default NoteEditor;","import React, { useState, useEffect } from 'react';\nimport noteService from '../services/note';\nimport Toolbar from './Toolbar';\nimport NotesList from './NotesList';\nimport NoteEditor from './NoteEditor';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst App = () => {\n    const [notes, setNotes] = useState([]);\n    const [toggleEditorView, setToggleEditorView] = useState(false);\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                setNotes(initialNotes)\n            })\n    }, []);\n\n    const handleToggle = () => {\n        setToggleEditorView(!toggleEditorView);\n    }\n\n    //If no notes to display, show note editor instead.\n    if (notes.length === 0) {\n        return (\n            <div>\n                <Toolbar toggle={handleToggle} toggleView={toggleEditorView} />\n                <Container>\n                    <Row>\n                        <Col>\n                            <NoteEditor notes={notes} setNotes={setNotes} toggle={handleToggle} />\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n        );\n    }\n\n    //If there are notes, show NoteList unless toggleEditorView is pressed, then show NoteEditor.\n    return (\n        <div>\n            <Toolbar toggle={handleToggle} toggleView={toggleEditorView} />\n            <Container>\n                {toggleEditorView\n                    ? <Row><Col><NoteEditor notes={notes} setNotes={setNotes} toggle={handleToggle} /> </Col></Row>\n                    : <Row><Col><NotesList notesList={notes} setNotes={setNotes} /></Col></Row>}\n\n            </Container>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}